trigger:
  branches:
    include:
      - main

  paths:
    include:
      - /tfazlabro/variables.tf
      - /tfazlabro/main.tf

 pool:
    vmImage: 'ubuntu-latest'

  variables:
    - group: hawaVB
  
  steps:
  - checkout: self

  - task: PowerShell@2
    displayName: 'Set Azure Service Principal Credentials'
     inputs:
      targetType: 'inline'
    - script: |
        $env:ARM_CLIENT_ID = "$(tfazAppID)"
        $env:ARM_CLIENT_SECRET = "$(SPNPass)"
        $env:ARM_TENANT_ID = "$(tenant_id)"
        $env:ARM_SUBSCRIPTION_ID = "$(subscription_id)"

  - task: AzureCLI@2
    displayName: 'Install Azure CLI'

  - script: |
        echo "##vso[task.setvariable variable=tfazAppID;isOutput=true]$env:tfazAppID"
        echo "##vso[task.setvariable variable=SASPass;isOutput=true]$env:SASPass"
        echo "##vso[task.setvariable variable=tenant_id;isOutput=true]$env:tenant_id"
    displayName: 'Get Terraform Outputs'

  - script: |
      az login --service-principal -u $env:tfazAppID -p $env:SASPass --tenant $env:tenant_id
    displayName: 'Log Into Azure'

  - steps:
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform'
    - script: terraform version
    displayName: Terraform Version
    - script:  az login --service-principal -u $env:tfazAppID -p $env:SASPass --tenant $env:tenant_id
    displayName: 'Log Into Azure'
    - script: terraform init -backend-config=resource_group_name=$(rg_name) -backend-config="storage_account_name=$(storageAccount_name)" -backend-config="container_name=$(cont_name)" -backend-config="access_key=$(SASPass)" -backend-config="key=$(state_file)"
      displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro
    - script: terraform plan -var="client_id=$env:tfazAppID" -var="client_secret=$env:SPNPass" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="admin_password=$(VMAdminPass)" -out="out.plan"
      displayName: Terraform Plan
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro
    - script: terraform apply out.plan
     displayName: 'Terraform Apply'
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro