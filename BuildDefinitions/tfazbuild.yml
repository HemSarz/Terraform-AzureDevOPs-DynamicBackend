trigger:
  branches:
    include:
      - master
  paths:
    include:
      - /tfazlabro/variables.tf
      - /tfazlabro/main.tf

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Terraform-BuildVariables
  - name: tenant_id
    value: "2b203c53-c460-43ff-88b3-cb8bb33c3fa9"
  - name: subscription_id
    value: "60b8226d-3048-4a92-b759-c99f388752a1"

steps:
  - task: PowerShell@2
    displayName: 'Set Azure Service Principal Credentials'
    inputs:
      targetType: 'inline'
      script: |
        $env:ARM_CLIENT_ID = "$(tfazhh)"
        $env:ARM_CLIENT_SECRET = "$(SPNPass)"
        $env:ARM_CLIENT_SECRET = "$(STGPass)"
  
  - task: AzureCLI@2
    displayName: 'Install Azure CLI'

  - script: |
      echo "##vso[task.setvariable variable=tfazhh;isOutput=true]$(terraform output -raw tfazhh)"
      echo "##vso[task.setvariable variable=SPNPass;isOutput=true]$(terraform output -raw SPNPass)"
      echo "##vso[task.setvariable variable=STGPass;isOutput=true]$(terraform output -raw STGPass)"
    displayName: 'Get Terraform Outputs'

steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform'
  - script: terraform version
    displayName: Terraform Version
  - script:  az login --service-principal -u $(tfazhh) -p $(SPNPAss) --tenant $(tenant_id)
    displayName: 'Log Into Azure'
  - script: terraform init -backend-config=resource_group_name=$(rg_name) -backend-config="storage_account_name=$(storageAccount_name)" -backend-config="container_name=$(cont_name)" -backend-config="access_key=$(STGPass)" -backend-config="key=$(state_file)"
    displayName: "Terraform Init"
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro
  - script: terraform plan -var="client_id=$(tfazhh)" -var="client_secret=$(SPNPass)" -var="tenant_id=$(tenant_id)" -var="subscription_id=$(subscription_id)" -var="admin_password=$(VMAdminPass)" -out="out.plan"
    displayName: Terraform Plan
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro
  - script: terraform apply out.plan
    displayName: 'Terraform Apply'
    workingDirectory: $(System.DefaultWorkingDirectory)/tfazlabro